name: CI
on:
  push:
    branches:
      - '**'

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.9.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.9.10"
    - name: Check platform
      run: python -c "import platform; print(platform.machine())"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Set up dvc
      uses: iterative/setup-dvc@v1
    - name: Check out dvc files
      run: make dvc-pull

    - name: Setup docker buildx
      uses: docker/setup-buildx-action@v1

    - name: Build docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        load: true
        tags: mlops-intro
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run unit tests
      run: docker run mlops-intro pytest tests/unit

    - name: Install terraform
      uses: hashicorp/setup-terraform@v1

    - name: Setup Terragrunt
      uses: autero1/action-terragrunt@v1.1.0
      with:
        terragrunt_version: latest

    - name: Check Terragrunt
      run: terragrunt --version

    - name: Terragrunt apply
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        COMMIT_ID: ${{ github.sha }}
      run: |
        zip -r terraform/app/code-$COMMIT_ID.zip .
        make tf-app-apply

    - name: Smoke test
      run: |
        export API_HOST=$(make tf-app-output-cname)
        echo $API_HOST
        docker run -e API_HOST=$API_HOST mlops-intro pytest tests/smoke