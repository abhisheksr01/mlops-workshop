name: Terraform
on:
  push:
    branches:
      - '**'
    paths:
      - 'terraform/**'
      - '.github/workflows/tf.yml'

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: mlops-intro-ecr
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        cp terraform/app/Dockerrun.aws.template.json terraform/app/Dockerrun.aws.json
        sed -i "s#<IMAGE_NAME>#${REGISTRY}/${REPOSITORY}:${IMAGE_TAG}#g" terraform/app/Dockerrun.aws.json

    - name: Install terraform
      uses: hashicorp/setup-terraform@v1

    - name: Setup Terragrunt
      uses: autero1/action-terragrunt@v1.1.0
      with:
        terragrunt_version: latest
    - name: Check Terragrunt
      run: terragrunt --version
    - name: Terragrunt apply
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        OWNER_TAG: ${{secrets.OWNER_TAG}}
      run: make tf-apply-app
